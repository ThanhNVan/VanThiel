@using System.Security.Claims;
@using Microsoft.AspNetCore.Http
@using VanThiel.Domain.DTOs.ReturnModel
@inherits LayoutComponentBase
@inject IHttpContextAccessor HttpContextAccessor
@inject NavigationManager NavigationManager

<PageTitle>Van Thiel</PageTitle>

<div class="page">
    <CascadingAuthenticationState>
        <AuthorizeView>
            <Authorized>
                <div class="sidebar">
                    <NavMenu />
                </div>
            </Authorized>
        </AuthorizeView>
    </CascadingAuthenticationState>
    <main>

        <CascadingAuthenticationState>
            <AuthorizeView>
                <Authorized>
                    <FluentStack HorizontalAlignment="@HorizontalAlignment.End"
                                 VerticalAlignment="@VerticalAlignment.Center"
                                 Style="height: 48px; background: var(--neutral-layer-4); padding-inline-end: 10px; ">
                        <FluentMessageBarProvider Section="MESSAGES_TOP" />
                        <FluentProfileMenu Image="https://t4.ftcdn.net/jpg/02/29/75/83/360_F_229758328_7x8jwCwjtBMmC6rgFzLFhZoEpLobB6L8.jpg"
                                           Status="@PresenceStatus.Available"
                                           HeaderLabel="User"
                                           Initials="BG"
                                           FullName="@GetUserInfo(context.User.Claims , "FullName")"
                                           EMail="@GetUserInfo(context.User.Claims , "Email")"
                                           Style="min-width: 330px;" 
                                           OnHeaderButtonClick="() => Logout()"
                                           OnFooterLinkClick="() => MyProfile()"
                                           />
                    </FluentStack>
                    <article class="content px-4">
                        @Body
                    </article>
                </Authorized>

                <NotAuthorized>
                    <Unauthorized />
                </NotAuthorized>
            </AuthorizeView>
        </CascadingAuthenticationState>
    </main>
</div>

@code {
        
    private string GetUserInfo(IEnumerable<Claim> claims, string claimValue)
    {
        

        var  fullname = claims.FirstOrDefault(x => x.Type == $"{claimValue}").Value;

        return fullname;
    }

    private  void Logout()
    {
        this.NavigationManager.NavigateTo("/logout");
    }
    
    private  void MyProfile()
    {
        this.NavigationManager.NavigateTo("/my-profile");
    }
}